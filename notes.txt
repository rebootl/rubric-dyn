
- make next by date link [ > ] not clickable, if last
    ==> DONE

- remove pub for images (db)
    ==> DONE, still in db, evtl. I want this back

- add seconds to images datetime_norm
    ==> DONE

- make subdirs for images/galleries and import from there
  (create galleries from subdirs)
    ==> DONE

- add list of images in media dir on overview
  and make gallery_id writable again,
  so manual gallery creation and automatic (by directory) is possible

- cleanup db functions
    ==> DONE (

- cleanup json/ page meta data !!
  streamline template variables (e.g. .db... !!
    ==> DONE
  incl. db schema
  (new export/import needed for this)

- simplify tags
    ==> DONE (for now)

- gallery publish doesn't work, probably err. in template
    ==> pub/unpub _must_ be two forms/routes or else cannot work
    --> doesn't work still/again!!
    ==> FIXED restriction in db query was missing (home view)

- new export/import (to/from one server directory)
  use for download text as well

- include image publish state

- image edit, evtl. save all at once

- make private entries/galleries/images

- rework exif for pages
    ==> DONE

- include/create default-template, evtl. setup stuff, README

- optional page TOC (e.g. checkbox)

- freeze/upload buttons !

- adapt gallery list (interface), too cluttered
    ==> DONE

- remove image galleries (don't like it...)
  why ?
  it's unclear when to actually use a gallery and when to write
  an article, since I sometimes/often do have images in the articles...
    --> remove it from website, the feature can be kept
    --> no, "dead features" are bad, remove it totally
    ==> DONE
    --> instead possibility to add autogenerated image markdown for a
        specific directory !!
    ==> DONE
        downside is that there is no "single image view", which is kinda nice,
        but if you really want that just link the image
    --> maybe something could be done about that ?
        - evtl. make link to image in image info ?

- some basic language support/information
  --> add language to db entries,
      so it could be used in the template...

- fix markup in interface
